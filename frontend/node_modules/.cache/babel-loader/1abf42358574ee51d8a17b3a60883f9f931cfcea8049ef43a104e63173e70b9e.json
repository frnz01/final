{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Franz H. Dulnuan\\\\Documents\\\\softEng-Act\\\\Hotel-final\\\\frontend\\\\src\\\\screens\\\\Homescreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Room from '../components/Room';\nimport Loader from \"../components/Loader\";\nimport Error from \"../components/Error\";\nimport moment from \"moment\";\nimport 'antd/dist/reset.css';\nimport { DatePicker, Space } from 'antd';\n// import { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  RangePicker\n} = DatePicker;\nconst Homescreen = () => {\n  _s();\n  const [rooms, setRooms] = useState([]);\n  const [loading, setloading] = useState(false);\n  const [error, seterror] = useState(false);\n  const [fromdate, setfromdate] = useState(moment().format(\"DD-MM-YYYY\"));\n  const [todate, settodate] = useState(moment().add(1, \"day\").format(\"DD-MM-YYYY\"));\n  console.log(fromdate, todate);\n  console.log(fromdate, todate);\n  useEffect(() => {\n    async function getResults() {\n      try {\n        setloading(true);\n        const data = (await axios(\"/api/rooms/getallrooms\")).data;\n        setRooms(data);\n        setloading(false);\n      } catch (error) {\n        seterror(true);\n        console.log(error);\n        setloading(false);\n      }\n    }\n    getResults();\n  }, []);\n  const filterByDate = dates => {\n    if (dates) {\n      // setfromdate(moment(dates[0]).format(\"DD-MM-YYYY\"));\n      // settodate(moment(dates[1]).format(\"DD-MM-YYYY\"));\n      const from_date = new Date(dates[0]).toLocaleDateString('en-GB');\n      const to_date = new Date(dates[1]).toLocaleDateString('en-GB');\n\n      // setfromdate(dates[0]);\n      // settodate(dates[1]);\n      setfromdate(from_date.replace(/\\//g, '-'));\n      settodate(to_date.replace(/\\//g, '-'));\n    } else {\n      setfromdate(null);\n      settodate(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-3\",\n        children: /*#__PURE__*/_jsxDEV(RangePicker, {\n          format: \"DD-MM-YYYY\",\n          onChange: filterByDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center mt-5\",\n      children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 12\n      }, this) : rooms.length > 1 ? rooms.map(room => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-9 mt-3\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(Room, {\n            room: room,\n            fromdate: fromdate,\n            todate: todate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 52\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 20\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Homescreen, \"P4mC5MAnrdkwb/rmFCslqHqknYs=\");\n_c = Homescreen;\nexport default Homescreen;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import Room from '../components/Room';\n// import Loader from \"../components/Loader\";\n// import Error from \"../components/Error\";\n// import moment from \"moment\";\n// import 'antd/dist/reset.css';\n// import { DatePicker, Space } from 'antd';\n// import { useNavigate } from 'react-router-dom';\n\n// const { RangePicker } = DatePicker;\n\n// const Homescreen = () => {\n\n//   const navigate = useNavigate();\n\n//   const [rooms, setRooms] = useState([]);\n//   const [loading, setloading] = useState(false);\n//   const [error, seterror] = useState(false);\n\n//   const [fromdate, setfromdate] = useState(moment().format(\"DD-MM-YYYY\"));\n//   const [todate, settodate] = useState(moment().add(1, \"day\").format(\"DD-MM-YYYY\"));\n\n//   useEffect(() => {\n//     async function getResults() {\n//       try {\n//         setloading(true);\n//         const data = (await axios(\"/api/rooms/getallrooms\")).data;\n//         setRooms(data);\n//         setloading(false);\n//       } catch (error) {\n//         seterror(true);\n//         console.log(error);\n//         setloading(false);\n//       }\n//     }\n//     getResults();\n//   }, []);\n\n//   const filterByDate = (dates) => {\n//     if (dates) {\n//       // const roomid = 123; // Replace with the actual room ID\n//       setfromdate(moment(dates[0]).format(\"DD-MM-YYYY\"));\n//       settodate(moment(dates[1]).format(\"DD-MM-YYYY\"));\n\n//       navigate(`/book/${rooms._id}/${fromdate}/${todate}`);\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n\n//       <div className=\"row mt-5\">\n//         <div className=\"col-md-3\">\n//         <RangePicker format='DD-MM-YYYY' onChange={filterByDate}/>\n//         </div>\n//       </div>\n\n//       <div className=\"row justify-content-center mt-5\">\n//         {loading ? (\n//           (<Loader />)\n//         ) : rooms.length > 1 ? (\n//           rooms.map((room) => {\n//             return <div className=\"col-md-9 mt-3\"> <Room room={room} fromdate={fromdate} todate={todate}/></div>;\n//           })\n//         ) : (\n//           (<Error />)\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Homescreen;\nvar _c;\n$RefreshReg$(_c, \"Homescreen\");","map":{"version":3,"names":["React","useState","useEffect","axios","Room","Loader","Error","moment","DatePicker","Space","jsxDEV","_jsxDEV","RangePicker","Homescreen","_s","rooms","setRooms","loading","setloading","error","seterror","fromdate","setfromdate","format","todate","settodate","add","console","log","getResults","data","filterByDate","dates","from_date","Date","toLocaleDateString","to_date","replace","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","length","map","room","_c","$RefreshReg$"],"sources":["C:/Users/Franz H. Dulnuan/Documents/softEng-Act/Hotel-final/frontend/src/screens/Homescreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Room from '../components/Room';\r\nimport Loader from \"../components/Loader\";\r\nimport Error from \"../components/Error\";\r\nimport moment from \"moment\";\r\nimport 'antd/dist/reset.css';\r\nimport { DatePicker, Space } from 'antd';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst Homescreen = () => {\r\n\r\n  const [rooms, setRooms] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n  const [error, seterror] = useState(false);\r\n\r\n  \r\n  const [fromdate, setfromdate] = useState(moment().format(\"DD-MM-YYYY\"));\r\n  const [todate, settodate] = useState(moment().add(1, \"day\").format(\"DD-MM-YYYY\"));\r\n  console.log(fromdate, todate);\r\n  \r\n  console.log(fromdate, todate);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    async function getResults() {\r\n      try {\r\n        setloading(true);\r\n        const data = (await axios(\"/api/rooms/getallrooms\")).data;\r\n        setRooms(data);\r\n        setloading(false);\r\n      } catch (error) {\r\n        seterror(true);\r\n        console.log(error);\r\n        setloading(false);\r\n      }\r\n    }\r\n    getResults();\r\n  }, []);\r\n\r\n\r\n  const filterByDate = (dates) => {\r\n    if (dates) {\r\n      // setfromdate(moment(dates[0]).format(\"DD-MM-YYYY\"));\r\n      // settodate(moment(dates[1]).format(\"DD-MM-YYYY\"));\r\n      const from_date = new Date(dates[0]).toLocaleDateString('en-GB');\r\n      const to_date = new Date(dates[1]).toLocaleDateString('en-GB');\r\n\r\n      // setfromdate(dates[0]);\r\n      // settodate(dates[1]);\r\n      setfromdate(from_date.replace(/\\//g, '-'));\r\n      settodate(to_date.replace(/\\//g, '-'));\r\n\r\n    }else{\r\n      setfromdate(null);\r\n      settodate(null);\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <div className=\"container\">\r\n\r\n      <div className=\"row mt-5\">\r\n        <div className=\"col-md-3\">\r\n        {/* <RangePicker format='DD-MM-YYYY' onChange={filterByDate}/> */}\r\n        <RangePicker format=\"DD-MM-YYYY\" onChange={filterByDate} />\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n      <div className=\"row justify-content-center mt-5\">\r\n        {loading ? (\r\n          (<Loader />)\r\n        ) : rooms.length >1 ? (\r\n          rooms.map((room) => {\r\n            return <div className=\"col-md-9 mt-3\"> <Room room={room} fromdate={fromdate} todate={todate}/></div>;\r\n          })\r\n        ) : (\r\n          (<Error />)\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Homescreen;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import Room from '../components/Room';\r\n// import Loader from \"../components/Loader\";\r\n// import Error from \"../components/Error\";\r\n// import moment from \"moment\";\r\n// import 'antd/dist/reset.css';\r\n// import { DatePicker, Space } from 'antd';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n\r\n// const { RangePicker } = DatePicker;\r\n\r\n// const Homescreen = () => {\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   const [rooms, setRooms] = useState([]);\r\n//   const [loading, setloading] = useState(false);\r\n//   const [error, seterror] = useState(false);\r\n\r\n//   const [fromdate, setfromdate] = useState(moment().format(\"DD-MM-YYYY\"));\r\n//   const [todate, settodate] = useState(moment().add(1, \"day\").format(\"DD-MM-YYYY\"));\r\n\r\n//   useEffect(() => {\r\n//     async function getResults() {\r\n//       try {\r\n//         setloading(true);\r\n//         const data = (await axios(\"/api/rooms/getallrooms\")).data;\r\n//         setRooms(data);\r\n//         setloading(false);\r\n//       } catch (error) {\r\n//         seterror(true);\r\n//         console.log(error);\r\n//         setloading(false);\r\n//       }\r\n//     }\r\n//     getResults();\r\n//   }, []);\r\n\r\n//   const filterByDate = (dates) => {\r\n//     if (dates) {\r\n//       // const roomid = 123; // Replace with the actual room ID\r\n//       setfromdate(moment(dates[0]).format(\"DD-MM-YYYY\"));\r\n//       settodate(moment(dates[1]).format(\"DD-MM-YYYY\"));\r\n\r\n//       navigate(`/book/${rooms._id}/${fromdate}/${todate}`);\r\n//     }\r\n//   };\r\n  \r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n\r\n//       <div className=\"row mt-5\">\r\n//         <div className=\"col-md-3\">\r\n//         <RangePicker format='DD-MM-YYYY' onChange={filterByDate}/>\r\n//         </div>\r\n//       </div>\r\n\r\n//       <div className=\"row justify-content-center mt-5\">\r\n//         {loading ? (\r\n//           (<Loader />)\r\n//         ) : rooms.length > 1 ? (\r\n//           rooms.map((room) => {\r\n//             return <div className=\"col-md-9 mt-3\"> <Room room={room} fromdate={fromdate} todate={todate}/></div>;\r\n//           })\r\n//         ) : (\r\n//           (<Error />)\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Homescreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}