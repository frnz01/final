[{"C:\\Users\\Franz H. Dulnuan\\Documents\\softEng-Act\\Hotel-final\\frontend\\src\\index.js":"1","C:\\Users\\Franz H. Dulnuan\\Documents\\softEng-Act\\Hotel-final\\frontend\\src\\App.js":"2","C:\\Users\\Franz H. Dulnuan\\Documents\\softEng-Act\\Hotel-final\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Franz H. Dulnuan\\Documents\\softEng-Act\\Hotel-final\\frontend\\src\\components\\Navbar.js":"4","C:\\Users\\Franz H. Dulnuan\\Documents\\softEng-Act\\Hotel-final\\frontend\\src\\screens\\Homescreen.js":"5","C:\\Users\\Franz H. Dulnuan\\Documents\\softEng-Act\\Hotel-final\\frontend\\src\\components\\Room.js":"6","C:\\Users\\Franz H. Dulnuan\\Documents\\softEng-Act\\Hotel-final\\frontend\\src\\screens\\Bookingscreen.js":"7","C:\\Users\\Franz H. Dulnuan\\Documents\\softEng-Act\\Hotel-final\\frontend\\src\\components\\Loader.js":"8","C:\\Users\\Franz H. Dulnuan\\Documents\\softEng-Act\\Hotel-final\\frontend\\src\\components\\Error.js":"9","C:\\Users\\Franz H. Dulnuan\\Documents\\softEng-Act\\Hotel-final\\frontend\\src\\screens\\Loginscreen.js":"10","C:\\Users\\Franz H. Dulnuan\\Documents\\softEng-Act\\Hotel-final\\frontend\\src\\screens\\Registerscreen.js":"11","C:\\Users\\Franz H. Dulnuan\\Documents\\softEng-Act\\Hotel-final\\frontend\\src\\components\\Success.js":"12","C:\\Users\\Franz H. Dulnuan\\Documents\\softEng-Act\\Hotel-final\\frontend\\src\\screens\\Profilescreen.js":"13","C:\\Users\\Franz H. Dulnuan\\Documents\\softEng-Act\\Hotel-final\\frontend\\src\\screens\\Adminscreen.js":"14","C:\\Users\\Franz H. Dulnuan\\Documents\\softEng-Act\\Hotel-final\\frontend\\src\\screens\\Landingscreen.js":"15"},{"size":535,"mtime":1684636424489,"results":"16","hashOfConfig":"17"},{"size":1156,"mtime":1682815201297,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1680513341125,"results":"19","hashOfConfig":"17"},{"size":3108,"mtime":1684629909462,"results":"20","hashOfConfig":"17"},{"size":4506,"mtime":1682818088670,"results":"21","hashOfConfig":"17"},{"size":2177,"mtime":1684203375478,"results":"22","hashOfConfig":"17"},{"size":3772,"mtime":1684730458445,"results":"23","hashOfConfig":"17"},{"size":564,"mtime":1683168975675,"results":"24","hashOfConfig":"17"},{"size":211,"mtime":1680610867222,"results":"25","hashOfConfig":"17"},{"size":2356,"mtime":1684201245865,"results":"26","hashOfConfig":"17"},{"size":4158,"mtime":1680911764327,"results":"27","hashOfConfig":"17"},{"size":231,"mtime":1680609359721,"results":"28","hashOfConfig":"17"},{"size":3944,"mtime":1682505044336,"results":"29","hashOfConfig":"17"},{"size":30707,"mtime":1683375361766,"results":"30","hashOfConfig":"17"},{"size":643,"mtime":1682817584473,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yqv1aw",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Franz H. Dulnuan\\Documents\\softEng-Act\\Hotel-final\\frontend\\src\\index.js",[],[],"C:\\Users\\Franz H. Dulnuan\\Documents\\softEng-Act\\Hotel-final\\frontend\\src\\App.js",["88"],[],"import './App.css';\nimport Navbar from './components/Navbar';\nimport {BrowserRouter, Routes,  Route, Link} from 'react-router-dom'\nimport Homescreen from './screens/Homescreen'\nimport Bookingscreen from './screens/Bookingscreen'\nimport Loginscreen from './screens/Loginscreen';\nimport Registerscreen from './screens/Registerscreen';\nimport Profilescreen from './screens/Profilescreen';\nimport Adminscreen from './screens/Adminscreen';\nimport Landingscreen from './screens/Landingscreen';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Navbar />\n       <BrowserRouter>\n        \n        <Routes>\n          <Route path=\"/home\" element={<Homescreen />} />\n          <Route path = \"/book/:id/:fromdate/:todate\" element = {<Bookingscreen />} />\n          <Route path=\"/login\" element={<Loginscreen />} />\n          <Route path=\"/register\" element={<Registerscreen />} />\n          <Route path = \"/profile\" element={<Profilescreen />} />\n          <Route path = \"/admin\" element={<Adminscreen />} />\n          <Route path = \"/\" element={<Landingscreen />} />\n        </Routes>\n\n\n      </BrowserRouter>\n     \n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Franz H. Dulnuan\\Documents\\softEng-Act\\Hotel-final\\frontend\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\Franz H. Dulnuan\\Documents\\softEng-Act\\Hotel-final\\frontend\\src\\components\\Navbar.js",["89"],[],"import React from \"react\";\r\n\r\nfunction Navbar() {\r\n  // const user = JSON.parse(localStorage.getItem(\"currentuser\"));\r\n  const user = JSON.parse(localStorage.getItem(\"currentuser\"));\r\n  function logout(){\r\n    localStorage.removeItem(\"currentuser\");\r\n    window.location.href = '/login'\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <nav class=\"navbar navbar-expand-lg\">\r\n        <a class=\"navbar-brand\" href=\"/\">\r\n          Hotel Rooms\r\n        </a>\r\n        <button\r\n          class=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span class=\"navbar-toggler-icon\"><i class=\"fa-solid fa-bars\" style={{color: 'white'}}></i></span>\r\n        </button>\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul class=\"navbar-nav mr-5\">\r\n            {user ? (\r\n              <>\r\n                <div class=\"dropdown\">\r\n                  <button\r\n                    class=\"btn btn-secondary dropdown-toggle\"\r\n                    type=\"button\"\r\n                    id=\"dropdownMenuButton\"\r\n                    data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded=\"false\"\r\n                  >\r\n                    <i class=\"fa fa-user mr-2\"></i>{user.name}\r\n                  </button>\r\n                  <div\r\n                    class=\"dropdown-menu\"\r\n                    aria-labelledby=\"dropdownMenuButton\"\r\n                  >\r\n                    <a class=\"dropdown-item\" href=\"/home\">\r\n                      Home\r\n                    </a>\r\n                    <a class=\"dropdown-item\" href=\"/profile\">\r\n                      Profile\r\n                    </a>\r\n                    {(user.isAdmin || (user.isEmployee)) &&(\r\n                      <a class=\"dropdown-item\" href=\"/admin\">\r\n                      Dashboard\r\n                    </a>\r\n                    )}\r\n                    \r\n                    <a class=\"dropdown-item\" href=\"#\" onClick={logout}>\r\n                      Logout\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <li class=\"nav-item active\">\r\n                  <a class=\"nav-link\" href=\"/register\">\r\n                    Register\r\n                  </a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                  <a class=\"nav-link\" href=\"/login\">\r\n                    Login\r\n                  </a>\r\n                </li>\r\n              </>\r\n            )}\r\n            {/* <li class=\"nav-item active\">\r\n                  <a class=\"nav-link\" href=\"/register\">\r\n                    Register\r\n                  </a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                  <a class=\"nav-link\" href=\"/login\">\r\n                    Login\r\n                  </a>\r\n                </li> */}\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\nexport default Navbar;\r\n","C:\\Users\\Franz H. Dulnuan\\Documents\\softEng-Act\\Hotel-final\\frontend\\src\\screens\\Homescreen.js",["90","91","92","93","94"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Room from \"../components/Room\";\r\nimport Loader from \"../components/Loader\";\r\nimport Error from \"../components/Error\";\r\nimport moment from \"moment\";\r\nimport \"antd/dist/reset.css\";\r\nimport { DatePicker, Space } from \"antd\";\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst Homescreen = () => {\r\n  const [rooms, setRooms] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n  const [error, seterror] = useState(false);\r\n\r\n  const user = JSON.parse(localStorage.getItem('currentuser'));\r\n\r\n  const [fromdate, setfromdate] = useState(\"11-11-1111\");\r\n  const [todate, settodate] = useState(\r\n    moment().add(1, \"day\").format(\"DD-MM-YYYY\")\r\n  );\r\n  const [duplicaterooms, setduplicaterooms] = useState([]);\r\n  const[searchkey, setsearchkey] = useState('');\r\n  const[type, settype] = useState('all');\r\n  useEffect(() => {\r\n    async function getResults() {\r\n      try {\r\n        setloading(true);\r\n        const data = (await axios(\"/api/rooms/getallrooms\")).data;\r\n        setRooms(data);\r\n        setduplicaterooms(data);\r\n        setloading(false);\r\n      } catch (error) {\r\n        seterror(true);\r\n        console.log(error);\r\n        setloading(false);\r\n      }\r\n    }\r\n    getResults();\r\n  }, []);\r\n\r\n  const filterByDate = (dates) => {\r\n    if (dates) {\r\n      const fromDate = new Date(dates[0]);\r\n      const toDate = new Date(dates[1]);\r\n      const from_date = new Date(fromDate).toLocaleDateString(\"en-GB\");\r\n      const to_date = new Date(toDate).toLocaleDateString(\"en-GB\");\r\n      setfromdate(from_date.replace(/\\//g, \"-\"));\r\n      settodate(to_date.replace(/\\//g, \"-\"));\r\n  \r\n      let tempRooms = [];\r\n      let availability = false;\r\n  \r\n      for (const room of duplicaterooms) {\r\n        if (room.currentbookings.length > 0) {\r\n          for (const booking of room.currentbookings) {\r\n            const bookingFromDate = new Date(booking.fromdate);\r\n            const bookingToDate = new Date(booking.todate);\r\n  \r\n            if (\r\n              fromDate.getTime() < bookingFromDate.getTime() &&\r\n              toDate.getTime() < bookingFromDate.getTime()\r\n            ) {\r\n              availability = true;\r\n            } else if (\r\n              fromDate.getTime() > bookingToDate.getTime() &&\r\n              toDate.getTime() > bookingToDate.getTime()\r\n            ) {\r\n              availability = true;\r\n            }\r\n          }\r\n        }\r\n  \r\n        if (availability == true || room.currentbookings.length == 0) {\r\n          tempRooms.push(room);\r\n        }\r\n  \r\n        setRooms(tempRooms);\r\n      }\r\n    } else {\r\n      setfromdate(null);\r\n      settodate(null);\r\n    }\r\n  };\r\n\r\n  function filterBySearch(){\r\n    const temprooms = duplicaterooms.filter(room => room.name.toLowerCase().includes(searchkey.toLowerCase()))\r\n    setRooms(temprooms);\r\n  }\r\n\r\n  function filterByType(e){\r\n    settype(e);\r\n    if(e !== \"all\"){\r\n      const temprooms = duplicaterooms.filter(room =>room.type.toLowerCase() === e.toLowerCase())\r\n    setRooms(temprooms);\r\n    }\r\n    else{\r\n      setRooms(duplicaterooms);\r\n    }\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row mt-5 bs\">\r\n        <div className=\"col-md-3\">\r\n          {(user)&&(\r\n            <RangePicker format=\"DD-MM-YYYY\" onChange={filterByDate} />\r\n          )}\r\n          \r\n        </div>\r\n        <div className=\"col-md-5\">\r\n          <input type=\"text\" className=\"form-control\" placeholder='search rooms' \r\n          value={searchkey} onChange = {(e) => {setsearchkey(e.target.value)}} onKeyUp = {filterBySearch}\r\n          />\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n        <select className=\"form-control\" value = {type} onChange={(e)=>{filterByType(e.target.value)}}>\r\n          <option value=\"all\">All</option>\r\n          <option value=\"delux\">Delux</option>\r\n          <option value=\"non-delux\">Non-Delux</option>\r\n        </select>\r\n        </div>\r\n       \r\n\r\n\r\n      </div>\r\n\r\n      <div className=\"row justify-content-center mt-5\">\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          rooms.map((room) => {\r\n            return (\r\n              <div className=\"col-md-9 mt-3\">\r\n                {\" \"}\r\n                <Room room={room} fromdate={fromdate} todate={todate} />\r\n              </div>\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Homescreen;\r\n","C:\\Users\\Franz H. Dulnuan\\Documents\\softEng-Act\\Hotel-final\\frontend\\src\\components\\Room.js",["95","96","97"],[],"import React, { useState } from \"react\";\r\nimport { Modal, Button, Carousel } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Room({ room , fromdate , todate}) {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <div className=\"row bs\">\r\n      <div className=\"col-md-4\">\r\n        <img src={room.imageurls[0]} className=\"smallimg\" />\r\n      </div>\r\n      <div className=\"col-md-7 \">\r\n        <h1>{room.name}</h1>\r\n        <b>\r\n          {\" \"}\r\n          <p>Max Count : {room.maxcount}</p>\r\n          <p>Phone Number : {room.phonenumber}</p>\r\n          <p>Type : {room.type}</p>\r\n        </b>\r\n\r\n        <div style={{ float: \"right\" }}>\r\n          {(fromdate != \"11-11-1111\" && todate) &&(\r\n            <Link to={`/book/${room._id}/${fromdate}/${todate}`}>\r\n            <button className=\"btn btn-primary m-2\">Book Now</button>\r\n            </Link>\r\n          )}\r\n          \r\n          <button className=\"btn btn-primary\" onClick={handleShow}>\r\n            View Details\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal show={show} onHide={handleClose} animation={false} size=\"lg\">\r\n        <Modal.Header>\r\n          <Modal.Title>{room.name}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Carousel prevLabel='' nextLabel = ''>\r\n            {room.imageurls.map(url =>{\r\n              return <Carousel.Item>\r\n              <img\r\n                className=\"d-block w-100 bigimg\"\r\n                src={url}\r\n              />\r\n              {/* <Carousel.Caption>\r\n                <h3>First slide label</h3>\r\n                <p>\r\n                  Nulla vitae elit libero, a pharetra augue mollis interdum.\r\n                </p>\r\n              </Carousel.Caption> */}\r\n            </Carousel.Item>\r\n            })}\r\n          </Carousel>\r\n          <p>{room.description}</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Room;\r\n","C:\\Users\\Franz H. Dulnuan\\Documents\\softEng-Act\\Hotel-final\\frontend\\src\\screens\\Bookingscreen.js",["98","99","100","101"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Loader from \"../components/Loader\";\r\nimport Error from \"../components/Error\";\r\nimport moment from \"moment\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport swal from \"sweetalert2\";\r\n\r\nconst Bookingscreen = () => {\r\n  const [loading, setloading] = useState(true);\r\n  const [error, seterror] = useState();\r\n  const [room, setroom] = useState();\r\n\r\n  const { id, fromdate, todate } = useParams();\r\n\r\n  const fromd = moment(fromdate, \"DD-MM-YYYY\");\r\n  const tod = moment(todate, \"DD-MM-YYYY\");\r\n\r\n  const totaldays = moment.duration(tod.diff(fromd)).asDays() + 1;\r\n  const [totalamount, settotalamount] = useState();\r\n\r\n  useEffect(() => {\r\n    if(!localStorage.getItem('currentuser')){\r\n      window.location.reload = '/login'\r\n    }\r\n    const fetchData = async () => {\r\n      try {\r\n        setloading(true);\r\n        const data = (\r\n          await axios.post(\"/api/rooms/getroombyid\", { roomid: id })\r\n        ).data;\r\n        settotalamount(data.rentperday * totaldays);\r\n        setroom(data);\r\n        setloading(false);\r\n        console.log(data);\r\n      } catch (error) {\r\n        seterror(true);\r\n        console.log(error);\r\n        setloading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  async function onToken(token) {\r\n    const bookingdetails = {\r\n      room,\r\n      userid: JSON.parse(localStorage.getItem(\"currentuser\"))._id,\r\n      fromdate: fromd,\r\n      todate: tod,\r\n      totalamount,\r\n      totaldays,\r\n      token,\r\n    };\r\n\r\n    try {\r\n      setloading(true);\r\n      const result = await axios.post(\"/api/bookings/bookroom\", bookingdetails);\r\n      setloading(false);\r\n      swal.fire(\"Congratulations\", \"Room booked Successfully\", \"success\").then(result => {window.location.href = '/profile'});\r\n    } catch (error) {\r\n      setloading(false);\r\n      swal.fire(\"Oops\", \"Something went wrong\", \"error\").then(result => {window.location.href = '/profile'});\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"m-5\">\r\n      {loading ? (\r\n        <Loader />\r\n      ) : room ? (\r\n        <div>\r\n          <div className=\"row justify-content-center mt-5 bs\">\r\n            <div className=\"col-md-5\">\r\n              <h1>{room.name}</h1>\r\n              <img src={room.imageurls[0]} className=\"bigimg\" />\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n              <div style={{ textAlign: \"right\" }}>\r\n                <h1>Booking Details</h1>\r\n                <hr />\r\n                <b>\r\n                  <p>Name:</p>\r\n                  <p>From Date: {fromdate}</p>\r\n                  <p>To Date: {todate}</p>\r\n                  <p>Max Count: {room.maxcount}</p>\r\n                </b>\r\n              </div>\r\n              <div style={{ textAlign: \"right\" }}>\r\n                <b>\r\n                  <h1>Amount</h1>\r\n                  <hr />\r\n                  <p>Total days : {totaldays}</p>\r\n                  <p>Rent per day : {room.rentperday}</p>\r\n                  <p>Total Amount : {totalamount}</p>\r\n                </b>\r\n              </div>\r\n              <div style={{ float: \"right\" }}>\r\n                <StripeCheckout\r\n                  amount={totalamount * 100}\r\n                  token={onToken}\r\n                  currency=\"php\"\r\n                  stripeKey=\"pk_test_51MzzS9JdQqwRgXNg9MOSaTWDnIuX3KpCDxjd2l0oeXOHRktdKt9GRbWWeAItViLroJ7jzEGfga4tTURy3SQ9gwQF00ZRBZrxa0\"\r\n                >\r\n                  <button className=\"btn btn-primary\">Pay Now</button>\r\n                </StripeCheckout>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Error />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bookingscreen;\r\n","C:\\Users\\Franz H. Dulnuan\\Documents\\softEng-Act\\Hotel-final\\frontend\\src\\components\\Loader.js",["102","103"],[],"import React, { useState, CSSProperties } from \"react\";\r\nimport RingLoader from \"react-spinners/RingLoader\";\r\n\r\nfunction Loader() {\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  return (\r\n    <div style={{marginTop: '150px' ,marginLeft: '150px'}}>\r\n      <div className=\"sweet-loading text-center\">\r\n        <RingLoader\r\n          color='#000'\r\n          loading={loading}\r\n          css=''\r\n          size={80}\r\n          aria-label=\"Loading Spinner\"\r\n          data-testid=\"loader\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","C:\\Users\\Franz H. Dulnuan\\Documents\\softEng-Act\\Hotel-final\\frontend\\src\\components\\Error.js",[],[],"C:\\Users\\Franz H. Dulnuan\\Documents\\softEng-Act\\Hotel-final\\frontend\\src\\screens\\Loginscreen.js",["104"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Loader from \"../components/Loader\";\r\nimport Error from \"../components/Error\";\r\n\r\nconst Loginscreen = () => {\r\n  const [email, setemail] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n\r\n  const [loading, setloading] = useState(false);\r\n  const [error, seterror] = useState();\r\n\r\n  async function login() {\r\n    const user = {\r\n      email,\r\n      password,\r\n    };\r\n    try {\r\n      // setloading(true);\r\n      // const result = await axios.post('/api/users/login', user).data\r\n      // setloading(false);\r\n\r\n      // localStorage.setItem('currentuser', JSON.stringify(result));\r\n\r\n      //   window.location.href ='/home'\r\n      setloading(true);\r\n      const response = await axios.post(\"/api/users/login\", user);\r\n      const result = response.data;\r\n      setloading(false);\r\n      if (result) { //result && result.user\r\n        localStorage.setItem(\"currentuser\", JSON.stringify(result));\r\n        setloading(false);\r\n        window.location.href = \"/home\";\r\n      } else {\r\n        seterror(true);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      setloading(false);\r\n      seterror(true);\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      {loading && <Loader />}\r\n      <div className=\"row justify-content-center mt-5\">\r\n        <div className=\"col-md-5 mt-5\">\r\n        {/* {loading && <Loader />} */}\r\n          {error && <Error message=\"Invalid Email or Password\" />}\r\n          <div className=\"bs\">\r\n            <h2>Login</h2>\r\n\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              required\r\n              onChange={(e) => {\r\n                setemail(e.target.value);\r\n              }}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              required\r\n              onChange={(e) => {\r\n                setpassword(e.target.value);\r\n              }}\r\n            />\r\n            <button className=\"btn btn-primary mt-3\" onClick={login}>\r\n              LOGIN\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loginscreen;\r\n","C:\\Users\\Franz H. Dulnuan\\Documents\\softEng-Act\\Hotel-final\\frontend\\src\\screens\\Registerscreen.js",["105","106"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Loader from \"../components/Loader\";\r\nimport Error from \"../components/Error\";\r\nimport Success from \"../components/Success\";\r\n\r\nconst Registerscreen = () => {\r\n  const [name, setname] = useState(\"\");\r\n  const [address, setaddress] = useState(\"\");\r\n  const [username, setusername] = useState(\"\");\r\n  const [email, setemail] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const [confirmpassword, setconfirmpassword] = useState(\"\");\r\n  const [phonenumber, setphonenumber] = useState(\"\");\r\n\r\n  const [loading, setloading] = useState(false);\r\n  const [error, seterror] = useState();\r\n  const [success, setsuccess] =useState();\r\n\r\n  async function register(){\r\n    if(password ===confirmpassword){\r\n        const user={\r\n            name,\r\n            address,\r\n            username,\r\n            email,\r\n            password,\r\n            confirmpassword,\r\n            phonenumber\r\n        }\r\n        try {\r\n          setloading(true);\r\n          const result = await axios.post('/api/users/register', user).data\r\n          setsuccess(true);\r\n          setloading(false);\r\n\r\n          setname('');\r\n          setaddress('');\r\n          setusername('');\r\n          setemail('');\r\n          setpassword('');\r\n          setconfirmpassword('');\r\n          setphonenumber('');\r\n        } catch (error) {\r\n          console.log(error);\r\n          setloading(false);\r\n          seterror(true);\r\n        }\r\n    }else{\r\n        alert('Password not match!')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {loading && (<Loader/>)}\r\n      <div className=\"row justify-content-center mt-5\">\r\n        <div className=\"col-md-5 mt-5\">\r\n        {error && (<Error/>)}\r\n        {success && (<Success message = \"Registration Success\"/>)}\r\n          <div className=\"bs\">\r\n            <h2>Register</h2>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Name\"\r\n              value={name}\r\n              required\r\n              onChange={(e) => {\r\n                setname(e.target.value);\r\n              }}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Address\"\r\n              value={address}\r\n              required\r\n              onChange={(e) => {\r\n                setaddress(e.target.value);\r\n              }}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Username\"\r\n              value={username}\r\n              required\r\n              onChange={(e) => {\r\n                setusername(e.target.value);\r\n              }}\r\n            />\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              required\r\n              onChange={(e) => {\r\n                setemail(e.target.value);\r\n              }}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              required\r\n              onChange={(e) => {\r\n                setpassword(e.target.value);\r\n              }}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              placeholder=\"Confirm Password\"\r\n              value={confirmpassword}\r\n              required\r\n              onChange={(e) => {\r\n                setconfirmpassword(e.target.value);\r\n              }}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Phone Number\"\r\n              value={phonenumber}\r\n              required\r\n              onChange={(e) => {\r\n                setphonenumber(e.target.value);\r\n              }}\r\n            />\r\n            <button className=\"btn btn-primary mt-3\" onClick={register}>REGISTER</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Registerscreen;\r\n","C:\\Users\\Franz H. Dulnuan\\Documents\\softEng-Act\\Hotel-final\\frontend\\src\\components\\Success.js",[],[],"C:\\Users\\Franz H. Dulnuan\\Documents\\softEng-Act\\Hotel-final\\frontend\\src\\screens\\Profilescreen.js",["107","108","109","110","111","112","113"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Tabs } from \"antd\";\r\nimport axios from \"axios\";\r\nimport Loader from \"../components/Loader\";\r\nimport Error from \"../components/Error\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Divider, Space, Tag } from 'antd';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nfunction Profilescreen() {\r\n  const user = JSON.parse(localStorage.getItem(\"currentuser\"));\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      window.location.href = \"/login\";\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"ml-3 mt-3\">\r\n      <Tabs defaultActiveKey=\"1\">\r\n        <TabPane tab=\"Profile\" key=\"1\">\r\n          <h1>My Profile</h1>\r\n          <br />\r\n          <h1>Name: {user.name}</h1>\r\n          <h1>Email: {user.email}</h1>\r\n          <h1>isAdmin: {user.isAdmin ? \"YES\" : \"NO\"}</h1>\r\n        </TabPane>\r\n        <TabPane tab=\"Bookings\" key=\"2\">\r\n          <MyBookings />\r\n        </TabPane>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profilescreen;\r\n\r\nexport function MyBookings() {\r\n  const user = JSON.parse(localStorage.getItem(\"currentuser\"));\r\n  const [bookings, setbookings] = useState([]);\r\n  const [loading, setloading] = useState(false);\r\n  const [error, seterror] = useState();\r\n\r\n  useEffect(() => {\r\n    async function getMyBookings() {\r\n      try {\r\n        // const rooms = await axios.post('/api/getbookingsbyuserid', {userid: user._id}).data\r\n        // console.log(rooms)\r\n        setloading(true);\r\n        const response = await axios.post(\"/api/bookings/getbookingsbyuserid\", {\r\n          userid: user._id,\r\n        });\r\n        const data = response.data;\r\n        console.log(data);\r\n        setbookings(data);\r\n        setloading(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n        setloading(false);\r\n        seterror(error);\r\n      }\r\n    }\r\n    getMyBookings();\r\n  }, []);\r\n\r\n  async function cancelBooking(bookingid, roomid) {\r\n    try {\r\n      setloading(true);\r\n      const result = await axios.post(\"/api/bookings/cancelbooking\", {\r\n        bookingid,\r\n        roomid,\r\n      }).data;\r\n      console.log(result);\r\n      setloading(false);\r\n      Swal.fire(\"Congrats\", \"Booking Cancelled Successfully\", \"success\").then(\r\n        (result) => {\r\n          window.location.reload();\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n      setloading(false);\r\n      Swal.fire(\"Oops\", \"Something went wrong\", \"error\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col-mid-6\">\r\n          {loading && <Loader />}\r\n          {bookings &&\r\n            bookings.map((booking) => {\r\n              return (\r\n                <div className=\"bs\">\r\n                  <h1>{booking.room}</h1>\r\n                  <p>\r\n                    <b>BookingId</b> : {booking._id}\r\n                  </p>\r\n                  <p>\r\n                    <b>CheckIn</b> : {booking.fromdate}\r\n                  </p>\r\n                  <p>\r\n                    <b>CheckOut</b> : {booking.todate}\r\n                  </p>\r\n                  <p>\r\n                    <b>Amount</b> : {booking.totalamount}\r\n                  </p>\r\n                  <p>\r\n                    <b>Status</b> :{\" \"}\r\n                    {booking.status == \"cancelled\" ? (<Tag color=\"red\">CANCELLED</Tag>) : (<Tag color=\"green\">CONFIRMED</Tag>)}\r\n                  </p>\r\n                  {booking.status !== \"cancelled\" && (\r\n                    <div className=\"text-right\">\r\n                      <button\r\n                        class=\"btn btn-primary\"\r\n                        onClick={() => {\r\n                          cancelBooking(booking._id, booking.roomid);\r\n                        }}\r\n                      >\r\n                        Cancel Booking\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Franz H. Dulnuan\\Documents\\softEng-Act\\Hotel-final\\frontend\\src\\screens\\Adminscreen.js",["114","115","116","117","118","119","120","121","122"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Tabs } from \"antd\";\r\nimport axios from \"axios\";\r\nimport Loader from \"../components/Loader\";\r\nimport Error from \"../components/Error\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Modal, Button, Carousel } from \"react-bootstrap\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nfunction Adminscreen() {\r\n  // useEffect(() => {\r\n  //   if ((!JSON.parse(localStorage.getItem(\"currentuser\")).isAdmin) || (!JSON.parse(localStorage.getItem(\"currentuser\")).isEmployee)) {\r\n  //     window.location.href = \"/home\";\r\n  //   }\r\n  // }, []);\r\n  useEffect(() => {\r\n    const currentUser = JSON.parse(localStorage.getItem(\"currentuser\"));\r\n    if (!currentUser || (!currentUser.isAdmin && !currentUser.isEmployee)) {\r\n      window.location.href = \"/home\";\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mt-3 ml-3 mr-3 bs\">\r\n      <h2 className=\"text-center\" style={{ fontSize: \"30px\" }}>\r\n        <b>Admin Panel</b>\r\n      </h2>\r\n      <Tabs defaultActiveKey=\"1\">\r\n        <TabPane tab=\"Bookings\" key=\"1\">\r\n          <Bookings />\r\n        </TabPane>\r\n        <TabPane tab=\"Manage Rooms\" key=\"2\">\r\n          {/* <Rooms /> */}\r\n          <Tabs defaultActiveKey=\"1\">\r\n            <TabPane tab=\"Show Rooms\" key=\"1\">\r\n              <Rooms />\r\n            </TabPane>\r\n            <TabPane tab=\"Add Rooms\" key=\"2\">\r\n              <AddRooms />\r\n            </TabPane>\r\n          </Tabs>\r\n        </TabPane>\r\n        {JSON.parse(localStorage.getItem(\"currentuser\")).isAdmin && (\r\n           <TabPane tab=\"Manage Users\" key=\"4\">\r\n           <Tabs defaultActiveKey=\"1\">\r\n             <TabPane tab=\"Show Users\" key=\"1\">\r\n               <Users />\r\n             </TabPane>\r\n             <TabPane tab=\"Add Users\" key=\"2\">\r\n               <AddUsers />\r\n             </TabPane>\r\n           </Tabs>\r\n         </TabPane>\r\n        )}\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Adminscreen;\r\n\r\nexport function Bookings() {\r\n  const [bookings, setbookings] = useState([]);\r\n  const [loading, setloading] = useState(true);\r\n  const [error, seterror] = useState();\r\n\r\n  useEffect(() => {\r\n    async function getAllBookings() {\r\n      try {\r\n        const response = await axios.get(\"/api/bookings/getallbookings\");\r\n        const data = response.data;\r\n        setbookings(data);\r\n        setloading(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n        setloading(false);\r\n        seterror(error);\r\n      }\r\n    }\r\n    getAllBookings();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-12\">\r\n        <h1>Bookings</h1>\r\n        {loading && <Loader />}\r\n\r\n        <table className=\"table table-bordered table table-hover table table-striped\">\r\n          <thead className=\"bs thead-dark\">\r\n            <tr>\r\n              <th>Booking Id</th>\r\n              <th>User Id</th>\r\n              <th>Room</th>\r\n              <th>From</th>\r\n              <th>To</th>\r\n              <th>Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {bookings.length &&\r\n              bookings.map((booking) => {\r\n                return (\r\n                  <tr>\r\n                    <td>{booking._id}</td>\r\n                    <td>{booking.userid}</td>\r\n                    <td>{booking.room}</td>\r\n                    <td>{booking.fromdate}</td>\r\n                    <td>{booking.todate}</td>\r\n                    <td>{booking.status}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n\r\n        {bookings.length && (\r\n          <h1>There are total of {bookings.length} bookings</h1>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function Rooms() {\r\n  const [rooms, setrooms] = useState([]);\r\n  const [loading, setloading] = useState(true);\r\n  const [error, seterror] = useState();\r\n\r\n  // const [update, setupdate] = useState(false)\r\n  const [updateState, setUpdateState] = useState(-1);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const [show, setShow] = useState(false);\r\n\r\n  function handleEdit(id) {\r\n    setUpdateState(id);\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function getAllRooms() {\r\n      try {\r\n        const response = await axios.get(\"/api/rooms/getallrooms\");\r\n        const data = response.data;\r\n        setrooms(data);\r\n        setloading(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n        setloading(false);\r\n        seterror(error);\r\n      }\r\n    }\r\n    getAllRooms();\r\n  }, []);\r\n\r\n  function deleteRoom(roomid) {\r\n    axios.delete(`/api/rooms/deleteroom/${roomid}`)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        // update the users list in your state\r\n        Swal.fire(\"Congrats\", \"Room is deleted successfully\", \"success\").then(\r\n          (result) => {\r\n            setrooms(rooms.filter(room => room._id !== roomid));\r\n          });\r\n        \r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        Swal.fire(\"Oops\", \"Something went wrong\", \"error\");\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-12\">\r\n        <h1>Rooms</h1>\r\n        {loading && <Loader />}\r\n\r\n        <table className=\"table table-bordered table table-hover table table-striped\">\r\n          <thead className=\"bs thead-dark\">\r\n            <tr>\r\n              <th>Room Id</th>\r\n              <th>Name</th>\r\n              <th>Type</th>\r\n              <th>Rent Per Day</th>\r\n              <th>Max Count</th>\r\n              <th>Phone Number</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {rooms.length &&\r\n              rooms.map((room) => {\r\n                return updateState === room._id ? (\r\n                  <EditRoom\r\n                    room={room}\r\n                    rooms={rooms}\r\n                    setrooms={setrooms}\r\n                    show={show}\r\n                    handleClose={handleClose}\r\n                  />\r\n                ) : (\r\n                  <tr>\r\n                    <td>{room._id}</td>\r\n                    <td>{room.name}</td>\r\n                    <td>{room.type}</td>\r\n                    <td>{room.rentperday}</td>\r\n                    <td>{room.maxcount}</td>\r\n                    <td>{room.phonenumber}</td>\r\n                    <td>\r\n                      <button class=\"btn btn-primary\" onClick={() => {\r\n                          handleEdit(room._id);\r\n                          handleShow();\r\n                        }}>\r\n                        Update\r\n                      </button>\r\n                      <button class=\"btn btn-primary\" onClick={() => deleteRoom(room._id)}>Delete</button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function AddRooms() {\r\n  const [loading, setloading] = useState(false);\r\n  const [error, seterror] = useState();\r\n\r\n  const [name, setname] = useState(\"\");\r\n  const [rentperday, setrentperday] = useState();\r\n  const [maxcount, setmaxcount] = useState();\r\n  const [description, setdescription] = useState();\r\n  const [phonenumber, setphonenumber] = useState();\r\n  const [type, settype] = useState();\r\n  const [imageurl1, setimageurl1] = useState();\r\n  const [imageurl2, setimageurl2] = useState();\r\n  const [imageurl3, setimageurl3] = useState();\r\n  console.log(\r\n    name,\r\n    rentperday,\r\n    maxcount,\r\n    description,\r\n    phonenumber,\r\n    type,\r\n    imageurl1,\r\n    imageurl2,\r\n    imageurl3\r\n  );\r\n\r\n  async function addRoom() {\r\n    let newroom = {};\r\n    if (\r\n      name &&\r\n      rentperday &&\r\n      maxcount &&\r\n      description &&\r\n      phonenumber &&\r\n      imageurl1 &&\r\n      imageurl2 &&\r\n      imageurl3\r\n    ) {\r\n      newroom = {\r\n        name,\r\n        rentperday,\r\n        maxcount,\r\n        description,\r\n        phonenumber,\r\n        type,\r\n        imageurls: [imageurl1, imageurl2, imageurl3],\r\n      };\r\n    } else {\r\n      alert(\"Please fill up all the requirements!\");\r\n    }\r\n\r\n    try {\r\n      setloading(true);\r\n      const response = await axios.post(\"/api/rooms/addroom\", newroom);\r\n      const result = response.data;\r\n      // const result = await(axios.post('/api/rooms/addroom', newroom)).data\r\n      console.log(result);\r\n      Swal.fire(\"Congrats\", \"New room is added successfully\", \"success\").then(\r\n        (result) => {\r\n          window.location.href = \"/home\";\r\n        }\r\n      );\r\n      setloading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setloading(false);\r\n      seterror(error);\r\n      Swal.fire(\"Oops\", \"Something went wrong\", \"error\");\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"row-1\">\r\n      <h1>Add Rooms</h1>\r\n      {loading && <Loader />}\r\n      <div className=\"col-mid-5\">\r\n        <label for=\"name\">Room name:</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"name\"\r\n          required\r\n          value={name}\r\n          onChange={(e) => {\r\n            setname(e.target.value);\r\n          }}\r\n        />\r\n        <label for=\"rent\">Rent per day:</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"rent\"\r\n          required\r\n          value={rentperday}\r\n          onChange={(e) => {\r\n            setrentperday(e.target.value);\r\n          }}\r\n        />\r\n        <label for=\"maxcount\">Max Count:</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"maxcount\"\r\n          required\r\n          value={maxcount}\r\n          onChange={(e) => {\r\n            setmaxcount(e.target.value);\r\n          }}\r\n        />\r\n        <label for=\"description\">Descrition:</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"description\"\r\n          required\r\n          value={description}\r\n          onChange={(e) => {\r\n            setdescription(e.target.value);\r\n          }}\r\n        />\r\n        <label for=\"phonenumber\">Phone Number:</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"phonenumber\"\r\n          required\r\n          value={phonenumber}\r\n          onChange={(e) => {\r\n            setphonenumber(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div classname=\"col-mid-5\">\r\n        <label for=\"type\">Type:</label>\r\n        <select\r\n          className=\"form-control\"\r\n          name=\"type\"\r\n          required\r\n          onChange={(e) => {\r\n            settype(e.target.value);\r\n          }}\r\n        >\r\n          <option value=\"\" disabled selected>\r\n            Select room type\r\n          </option>\r\n          <option value=\"Delux\">Delux</option>\r\n          <option value=\"Non-Delux\">Non-Delux</option>\r\n        </select>\r\n        <label for=\"imgeurl1\">Image URL 1:</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"imageurl1\"\r\n          required\r\n          value={imageurl1}\r\n          onChange={(e) => {\r\n            setimageurl1(e.target.value);\r\n          }}\r\n        />\r\n        <label for=\"imgeurl2\">Image URL 2:</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"imageurl2\"\r\n          required\r\n          value={imageurl2}\r\n          onChange={(e) => {\r\n            setimageurl2(e.target.value);\r\n          }}\r\n        />\r\n        <label for=\"imgeurl3\">Image URL 3:</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"imageurl3\"\r\n          required\r\n          value={imageurl3}\r\n          onChange={(e) => {\r\n            setimageurl3(e.target.value);\r\n          }}\r\n        />\r\n        <div className=\"text-right\">\r\n          <button className=\"btn btn-primary mt-2\" onClick={addRoom}>\r\n            Add Button\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function EditRoom({ room, rooms, setrooms, show, handleClose }) {\r\n\r\n  const [updatedroom, setupdatedroom] = useState({\r\n    name: room.name,\r\n    rentperday: room.rentperday,\r\n    maxcount: room.maxcount,\r\n    description: room.description,\r\n    phonenumber: room.phonenumber,\r\n    type: room.type,\r\n    imageurls: [room.imageurls[1], room.imageurls[2], room.imageurls[3]]\r\n  });\r\n  console.log(updatedroom);\r\n\r\n  const handleUpdateRoom = (roomid) => {\r\n    axios\r\n      .put(\r\n        `/api/rooms/updateroom/${room._id}`,\r\n        updatedroom\r\n      )\r\n      .then((response) => {\r\n        // handle success\r\n        console.log(response.data);\r\n        handleClose();\r\n        Swal.fire(\"Congrats\", \"Room is updated successfully\", \"success\").then(\r\n          (result) => {\r\n            window.location.href = \"/admin\";\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        // handle error\r\n        console.log(error);\r\n        Swal.fire(\"Oops\", \"Something went wrong\", \"error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose} animation={false} size=\"lg\">\r\n      <Modal.Header>\r\n        <Modal.Title>Edit Room Here</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        Room Name:\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Room Name\"\r\n          name=\"name\"\r\n          value={updatedroom.name}\r\n          required\r\n          // onChange={(e)=>{setupdateduser({name: e.target.value})}}\r\n          onChange={(e) => {\r\n            setupdatedroom(prevState => ({\r\n              ...prevState,\r\n              [e.target.name]: e.target.value\r\n            }));\r\n          }}\r\n        />\r\n        Rent Per Day:\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"rent per day\"\r\n          name=\"rentperday\"\r\n          value={updatedroom.rentperday}\r\n          required\r\n          // onChange={(e)=>{setupdateduser({address: e.target.value})}}\r\n          onChange={(e) => {\r\n            setupdatedroom(prevState => ({\r\n              ...prevState,\r\n              [e.target.name]: e.target.value\r\n            }));\r\n          }}\r\n        />\r\n        maxcount:\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"max count\"\r\n          name=\"maxcount\"\r\n          value={updatedroom.maxcount}\r\n          required\r\n          // onChange={(e)=>{setupdateduser({username: e.target.value})}}\r\n          onChange={(e) => {\r\n            setupdatedroom(prevState => ({\r\n              ...prevState,\r\n              [e.target.name]: e.target.value\r\n            }));\r\n          }}\r\n        />\r\n        Description:\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"description\"\r\n          name=\"description\"\r\n          value={updatedroom.description}\r\n          required\r\n          // onChange={(e)=>{setupdateduser({email: e.target.value})}}\r\n          onChange={(e) => {\r\n            setupdatedroom(prevState => ({\r\n              ...prevState,\r\n              [e.target.name]: e.target.value\r\n            }));\r\n          }}\r\n        />\r\n        Phonenumber:\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Phonenumber\"\r\n          name=\"phonenumber\"\r\n          value={updatedroom.phonenumber}\r\n          required\r\n          // onChange={(e)=>{setupdateduser({password: e.target.value})}}\r\n          onChange={(e) => {\r\n            setupdatedroom(prevState => ({\r\n              ...prevState,\r\n              [e.target.name]: e.target.value\r\n            }));\r\n          }}\r\n        />\r\n        Type:\r\n        <select\r\n          className=\"form-control\"\r\n          name=\"type\"\r\n          value={updatedroom.type}\r\n          required\r\n          onChange={(e) => {\r\n            setupdatedroom(prevState => ({\r\n              ...prevState,\r\n              [e.target.name]: e.target.value\r\n            }));\r\n          }}\r\n        >\r\n          <option value=\"\" disabled selected>\r\n            Select room type\r\n          </option>\r\n          <option value=\"Delux\">Delux</option>\r\n          <option value=\"Non-Delux\">Non-Delux</option>\r\n        </select>\r\n        image url 1:\r\n         <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"image url 1\"\r\n          name=\"imageurl1\"\r\n          value={updatedroom.imageurls[0]}\r\n          required\r\n          // onChange={(e)=>{setupdateduser({isEmployee: e.target.value})}}\r\n          onChange={(e) => {\r\n            setupdatedroom(prevState => ({\r\n              ...prevState,\r\n              [e.target.name]: e.target.value\r\n            }));\r\n          }}\r\n        />\r\n        image url 2:\r\n         <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"image url 2\"\r\n          name=\"imageurl2\"\r\n          value={updatedroom.imageurls[1]}\r\n          required\r\n          // onChange={(e)=>{setupdateduser({isEmployee: e.target.value})}}\r\n          onChange={(e) => {\r\n            setupdatedroom(prevState => ({\r\n              ...prevState,\r\n              [e.target.name]: e.target.value\r\n            }));\r\n          }}\r\n        />\r\n        image url 3:\r\n         <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"image url 3\"\r\n          name=\"imageurl3\"\r\n          value={updatedroom.imageurls[2]}\r\n          required\r\n          // onChange={(e)=>{setupdateduser({isEmployee: e.target.value})}}\r\n          onChange={(e) => {\r\n            setupdatedroom(prevState => ({\r\n              ...prevState,\r\n              [e.target.name]: e.target.value\r\n            }));\r\n          }}\r\n        />\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"secondary\" type = \"submit\" onClick={handleUpdateRoom}>\r\n          Update\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport function Users() {\r\n  const [users, setusers] = useState([]);\r\n  const [loading, setloading] = useState(true);\r\n  const [error, seterror] = useState();\r\n\r\n  const [updateState, setUpdateState] = useState(-1);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const [show, setShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function getAllUsers() {\r\n      try {\r\n        const response = await axios.get(\"/api/users/getallusers\");\r\n        const data = response.data;\r\n        setusers(data);\r\n        setloading(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n        setloading(false);\r\n        seterror(error);\r\n      }\r\n    }\r\n    getAllUsers();\r\n  }, []);\r\n\r\n  function handleEdit(id) {\r\n    setUpdateState(id);\r\n  }\r\n  function deleteUser(userid) {\r\n    axios.delete(`/api/users/deleteuser/${userid}`)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        // update the users list in your state\r\n        Swal.fire(\"Congrats\", \"User is deleted successfully\", \"success\").then(\r\n          (result) => {\r\n            setusers(users.filter(user => user._id !== userid));\r\n          });\r\n        \r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        Swal.fire(\"Oops\", \"Something went wrong\", \"error\");\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-12\">\r\n        <h1>Users</h1>\r\n        {loading && <Loader />}\r\n\r\n        <table className=\"table table-bordered table table-hover table table-striped\">\r\n          <thead className=\"bs thead-dark\">\r\n            <tr>\r\n              <th>Users Id</th>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Employee</th>\r\n              <th>Admin</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.length &&\r\n              users.map((user) => {\r\n                return updateState === user._id ? (\r\n                  <EditUser\r\n                    user={user}\r\n                    users={users}\r\n                    setusers={setusers}\r\n                    show={show}\r\n                    handleClose={handleClose}\r\n                  />\r\n                ) : (\r\n                  <tr>\r\n                    <td>{user._id}</td>\r\n                    <td>{user.name}</td>\r\n                    <td>{user.email}</td>\r\n                    <td>{user.isEmployee ? \"Yes\" : \"No\"}</td>\r\n                    <td>{user.isAdmin ? \"Yes\" : \"No\"}</td>\r\n                    <td>\r\n                      <button\r\n                        class=\"btn btn-primary\"\r\n                        onClick={() => {\r\n                          handleEdit(user._id);\r\n                          handleShow();\r\n                        }}\r\n                      >\r\n                        Update\r\n                      </button>\r\n                      <button class=\"btn btn-primary\" onClick={() => deleteUser(user._id)}>Delete</button>\r\n                    </td>\r\n                    {/* <td>\r\n                      <button class=\"btn btn-primary\">Delete</button>\r\n                    </td> */}\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport function EditUser({ user, users, setusers, show, handleClose }) {\r\n\r\n  const [updateduser, setupdateduser] = useState({\r\n    name: user.name,\r\n    address: user.address,\r\n    username: user.username,\r\n    email: user.email,\r\n    password: user.password,\r\n    phonenumber: user.phonenumber,\r\n    isEmployee: user.isEmployee\r\n  });\r\n  console.log(updateduser);\r\n\r\n  const handleUpdateUser = () => {\r\n    axios\r\n      .put(\r\n        `/api/users/updateuser/${user._id}`,\r\n        updateduser\r\n      )\r\n      .then((response) => {\r\n        // handle success\r\n        console.log(response.data);\r\n        handleClose();\r\n        Swal.fire(\"Congrats\", \"User is updated successfully\", \"success\").then(\r\n          (result) => {\r\n            window.location.href = \"/admin\";\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        // handle error\r\n        console.log(error);\r\n        Swal.fire(\"Oops\", \"Something went wrong\", \"error\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose} animation={false} size=\"lg\">\r\n      <Modal.Header>\r\n        <Modal.Title>Edit User Here</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        Name:\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Name\"\r\n          name=\"name\"\r\n          value={updateduser.name}\r\n          required\r\n          // onChange={(e)=>{setupdateduser({name: e.target.value})}}\r\n          onChange={(e) => {\r\n            setupdateduser(prevState => ({\r\n              ...prevState,\r\n              [e.target.name]: e.target.value\r\n            }));\r\n          }}\r\n        />\r\n        Address:\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Address\"\r\n          name=\"address\"\r\n          value={updateduser.address}\r\n          required\r\n          // onChange={(e)=>{setupdateduser({address: e.target.value})}}\r\n          onChange={(e) => {\r\n            setupdateduser(prevState => ({\r\n              ...prevState,\r\n              [e.target.name]: e.target.value\r\n            }));\r\n          }}\r\n        />\r\n        Username:\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Username\"\r\n          name=\"username\"\r\n          value={updateduser.username}\r\n          required\r\n          // onChange={(e)=>{setupdateduser({username: e.target.value})}}\r\n          onChange={(e) => {\r\n            setupdateduser(prevState => ({\r\n              ...prevState,\r\n              [e.target.name]: e.target.value\r\n            }));\r\n          }}\r\n        />\r\n        Email:\r\n        <input\r\n          type=\"email\"\r\n          className=\"form-control\"\r\n          placeholder=\"Email\"\r\n          name=\"email\"\r\n          value={updateduser.email}\r\n          required\r\n          // onChange={(e)=>{setupdateduser({email: e.target.value})}}\r\n          onChange={(e) => {\r\n            setupdateduser(prevState => ({\r\n              ...prevState,\r\n              [e.target.name]: e.target.value\r\n            }));\r\n          }}\r\n        />\r\n        Password:\r\n        <input\r\n          type=\"password\"\r\n          className=\"form-control\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          value={updateduser.password}\r\n          required\r\n          // onChange={(e)=>{setupdateduser({password: e.target.value})}}\r\n          onChange={(e) => {\r\n            setupdateduser(prevState => ({\r\n              ...prevState,\r\n              [e.target.name]: e.target.value\r\n            }));\r\n          }}\r\n        />\r\n        Phonenumber:\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Phone Number\"\r\n          name=\"phonenumber\"\r\n          value={updateduser.phonenumber}\r\n          required\r\n          // onChange={(e)=>{setupdateduser({phonenumber: e.target.value})}}\r\n          onChange={(e) => {\r\n            setupdateduser(prevState => ({\r\n              ...prevState,\r\n              [e.target.name]: e.target.value\r\n            }));\r\n          }}\r\n        />\r\n        isEmployee:\r\n         <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Employee?\"\r\n          name=\"isEmployee\"\r\n          value={updateduser.isEmployee}\r\n          required\r\n          // onChange={(e)=>{setupdateduser({isEmployee: e.target.value})}}\r\n          onChange={(e) => {\r\n            setupdateduser(prevState => ({\r\n              ...prevState,\r\n              [e.target.name]: e.target.value\r\n            }));\r\n          }}\r\n        />\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"secondary\" type = \"submit\" onClick={handleUpdateUser}>\r\n          Update\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport function AddUsers() {\r\n  const [loading, setloading] = useState(false);\r\n  const [error, seterror] = useState();\r\n\r\n  const [name, setname] = useState(\"\");\r\n  const [address, setaddress] = useState();\r\n  const [username, setusername] = useState();\r\n  const [email, setemail] = useState();\r\n  const [password, setpassword] = useState();\r\n  const [phonenumber, setphonenumber] = useState();\r\n  const [cpassword, setcpassword] = useState();\r\n  const [access, setaccess] = useState();\r\n\r\n  async function addUser() {\r\n    let adminaccess = false;\r\n    let employeeaccess = false;\r\n    if (access == \"admin\") {\r\n      adminaccess = true;\r\n    } else if (access == \"employee\") {\r\n      employeeaccess = true;\r\n    }\r\n    let newuser = {};\r\n    if (cpassword === password) {\r\n      newuser = {\r\n        name,\r\n        address,\r\n        username,\r\n        email,\r\n        password,\r\n        phonenumber,\r\n        isAdmin: adminaccess,\r\n        isEmployee: employeeaccess,\r\n      };\r\n    } else {\r\n      alert(\"Please fill up all the requirements!\");\r\n    }\r\n\r\n    try {\r\n      setloading(true);\r\n      const response = await axios.post(\"/api/users/register\", newuser);\r\n      const result = response.data;\r\n      // const result = await(axios.post('/api/rooms/addroom', newroom)).data\r\n      console.log(result);\r\n      Swal.fire(\"Congrats\", \"New User is added successfully\", \"success\").then(\r\n        (result) => {\r\n          window.location.href = \"/admin\";\r\n        }\r\n      );\r\n      setloading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setloading(false);\r\n      seterror(error);\r\n      Swal.fire(\"Oops\", \"Something went wrong\", \"error\");\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"row-1\">\r\n      <h1>Add User</h1>\r\n      {loading && <Loader />}\r\n      <div className=\"col-mid-5\">\r\n        <label for=\"name\">Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"name\"\r\n          required\r\n          value={name}\r\n          onChange={(e) => {\r\n            setname(e.target.value);\r\n          }}\r\n        />\r\n        <label for=\"address\">Address:</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"address\"\r\n          required\r\n          value={address}\r\n          onChange={(e) => {\r\n            setaddress(e.target.value);\r\n          }}\r\n        />\r\n        <label for=\"username\">Username:</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"username\"\r\n          required\r\n          value={username}\r\n          onChange={(e) => {\r\n            setusername(e.target.value);\r\n          }}\r\n        />\r\n        <label for=\"email\">Email:</label>\r\n        <input\r\n          type=\"email\"\r\n          className=\"form-control\"\r\n          name=\"email\"\r\n          required\r\n          value={email}\r\n          onChange={(e) => {\r\n            setemail(e.target.value);\r\n          }}\r\n        />\r\n        <label for=\"password\">Password:</label>\r\n        <input\r\n          type=\"password\"\r\n          className=\"form-control\"\r\n          name=\"passwrod\"\r\n          required\r\n          value={password}\r\n          onChange={(e) => {\r\n            setpassword(e.target.value);\r\n          }}\r\n        />\r\n        <label for=\"cpassword\">Confirm Password:</label>\r\n        <input\r\n          type=\"password\"\r\n          className=\"form-control\"\r\n          name=\"cpassword\"\r\n          required\r\n          value={cpassword}\r\n          onChange={(e) => {\r\n            setcpassword(e.target.value);\r\n          }}\r\n        />\r\n        <label for=\"phonenumber\">Phonenumber:</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"phonenumber\"\r\n          required\r\n          value={phonenumber}\r\n          onChange={(e) => {\r\n            setphonenumber(e.target.value);\r\n          }}\r\n        />\r\n        <label for=\"access\">Access:</label>\r\n        <select\r\n          className=\"form-control\"\r\n          name=\"access\"\r\n          required\r\n          onChange={(e) => {\r\n            setaccess(e.target.value);\r\n          }}\r\n        >\r\n          <option value=\"\" disabled selected>\r\n            Seclect admin/employee/guest\r\n          </option>\r\n          <option value=\"admin\">Admin</option>\r\n          <option value=\"employee\">Employee</option>\r\n          <option value=\"guest\">Guest</option>\r\n        </select>\r\n\r\n        <div className=\"text-right\">\r\n          <button className=\"btn btn-primary mt-2\" onClick={addUser}>\r\n            Add\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Franz H. Dulnuan\\Documents\\softEng-Act\\Hotel-final\\frontend\\src\\screens\\Landingscreen.js",[],[],{"ruleId":"123","severity":1,"message":"124","line":3,"column":40,"nodeType":"125","messageId":"126","endLine":3,"endColumn":44},{"ruleId":"127","severity":1,"message":"128","line":59,"column":21,"nodeType":"129","endLine":59,"endColumn":72},{"ruleId":"123","severity":1,"message":"130","line":5,"column":8,"nodeType":"125","messageId":"126","endLine":5,"endColumn":13},{"ruleId":"123","severity":1,"message":"131","line":8,"column":22,"nodeType":"125","messageId":"126","endLine":8,"endColumn":27},{"ruleId":"123","severity":1,"message":"132","line":16,"column":10,"nodeType":"125","messageId":"126","endLine":16,"endColumn":15},{"ruleId":"133","severity":1,"message":"134","line":76,"column":26,"nodeType":"135","messageId":"136","endLine":76,"endColumn":28},{"ruleId":"133","severity":1,"message":"134","line":76,"column":65,"nodeType":"135","messageId":"136","endLine":76,"endColumn":67},{"ruleId":"137","severity":1,"message":"138","line":13,"column":9,"nodeType":"129","endLine":13,"endColumn":61},{"ruleId":"133","severity":1,"message":"139","line":25,"column":22,"nodeType":"135","messageId":"136","endLine":25,"endColumn":24},{"ruleId":"137","severity":1,"message":"138","line":45,"column":15,"nodeType":"129","endLine":48,"endColumn":17},{"ruleId":"123","severity":1,"message":"132","line":12,"column":10,"nodeType":"125","messageId":"126","endLine":12,"endColumn":15},{"ruleId":"140","severity":1,"message":"141","line":44,"column":6,"nodeType":"142","endLine":44,"endColumn":8,"suggestions":"143"},{"ruleId":"123","severity":1,"message":"144","line":59,"column":13,"nodeType":"125","messageId":"126","endLine":59,"endColumn":19},{"ruleId":"137","severity":1,"message":"138","line":77,"column":15,"nodeType":"129","endLine":77,"endColumn":65},{"ruleId":"123","severity":1,"message":"145","line":1,"column":27,"nodeType":"125","messageId":"126","endLine":1,"endColumn":40},{"ruleId":"123","severity":1,"message":"146","line":5,"column":17,"nodeType":"125","messageId":"126","endLine":5,"endColumn":27},{"ruleId":"123","severity":1,"message":"147","line":1,"column":27,"nodeType":"125","messageId":"126","endLine":1,"endColumn":36},{"ruleId":"123","severity":1,"message":"147","line":1,"column":27,"nodeType":"125","messageId":"126","endLine":1,"endColumn":36},{"ruleId":"123","severity":1,"message":"144","line":33,"column":17,"nodeType":"125","messageId":"126","endLine":33,"endColumn":23},{"ruleId":"123","severity":1,"message":"130","line":5,"column":8,"nodeType":"125","messageId":"126","endLine":5,"endColumn":13},{"ruleId":"123","severity":1,"message":"148","line":7,"column":10,"nodeType":"125","messageId":"126","endLine":7,"endColumn":17},{"ruleId":"123","severity":1,"message":"131","line":7,"column":19,"nodeType":"125","messageId":"126","endLine":7,"endColumn":24},{"ruleId":"140","severity":1,"message":"149","line":18,"column":6,"nodeType":"142","endLine":18,"endColumn":8,"suggestions":"150"},{"ruleId":"123","severity":1,"message":"132","line":44,"column":10,"nodeType":"125","messageId":"126","endLine":44,"endColumn":15},{"ruleId":"140","severity":1,"message":"151","line":66,"column":6,"nodeType":"142","endLine":66,"endColumn":8,"suggestions":"152"},{"ruleId":"133","severity":1,"message":"134","line":113,"column":37,"nodeType":"135","messageId":"136","endLine":113,"endColumn":39},{"ruleId":"123","severity":1,"message":"130","line":5,"column":8,"nodeType":"125","messageId":"126","endLine":5,"endColumn":13},{"ruleId":"123","severity":1,"message":"153","line":7,"column":25,"nodeType":"125","messageId":"126","endLine":7,"endColumn":33},{"ruleId":"123","severity":1,"message":"132","line":66,"column":10,"nodeType":"125","messageId":"126","endLine":66,"endColumn":15},{"ruleId":"123","severity":1,"message":"132","line":129,"column":10,"nodeType":"125","messageId":"126","endLine":129,"endColumn":15},{"ruleId":"123","severity":1,"message":"132","line":233,"column":10,"nodeType":"125","messageId":"126","endLine":233,"endColumn":15},{"ruleId":"123","severity":1,"message":"132","line":624,"column":10,"nodeType":"125","messageId":"126","endLine":624,"endColumn":15},{"ruleId":"123","severity":1,"message":"132","line":895,"column":10,"nodeType":"125","messageId":"126","endLine":895,"endColumn":15},{"ruleId":"133","severity":1,"message":"134","line":909,"column":16,"nodeType":"135","messageId":"136","endLine":909,"endColumn":18},{"ruleId":"133","severity":1,"message":"134","line":911,"column":23,"nodeType":"135","messageId":"136","endLine":911,"endColumn":25},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Error' is defined but never used.","'Space' is defined but never used.","'error' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'totaldays'. Either include them or remove the dependency array.","ArrayExpression",["154"],"'result' is assigned a value but never used.","'CSSProperties' is defined but never used.","'setLoading' is assigned a value but never used.","'useEffect' is defined but never used.","'Divider' is defined but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["155"],"React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.",["156"],"'Carousel' is defined but never used.",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},"Update the dependencies array to be: [id, totaldays]",{"range":"163","text":"164"},"Update the dependencies array to be: [user]",{"range":"165","text":"166"},"Update the dependencies array to be: [user._id]",{"range":"167","text":"168"},[1349,1351],"[id, totaldays]",[492,494],"[user]",[1847,1849],"[user._id]"]